package domainobject

import (
	"testing"

	methodstixobjects "github.com/av-belyakov/methodstixobjects/cmd"
	"github.com/stretchr/testify/assert"
)

func TestVulnerabilityDomainObjectsSTIX(t *testing.T) {
	nv := methodstixobjects.NewVulnerabilityDomainObjectsSTIX()

	assert.Equal(t, nv.GetType(), "vulnerability")
	_, err := nv.Get()
	assert.Error(t, err)

	nv.SetAnyName("vulnerability name")
	_, err = nv.Get()
	assert.NoError(t, err)
	nv.SetValueName("vul_name")
	assert.Equal(t, nv.GetName(), "vul_name")

	nv.SetAnyDescription("example_description")
	assert.Equal(t, nv.GetDescription(), "example_description")
	nv.SetValueDescription("exm_description")
	assert.Equal(t, nv.GetDescription(), "exm_description")
}

/*
// VulnerabilityDomainObjectsSTIX объект "Vulnerability", по терминологии STIX, содержит описание уязвимостей полученных в
// результате неверной формализации требований, ошибочном проектировании или некорректной реализации программного кода
// или логики в ПО, а также в компонентах оборудования
// Name - имя используемое для идентификации "Vulnerability" (ОБЯЗАТЕЛЬНОЕ ЗНАЧЕНИЕ)
// Description - более подробное описание
type VulnerabilityDomainObjectsSTIX struct {
	commonproperties.CommonPropertiesObjectSTIX
	commonpropertiesstixdo.CommonPropertiesDomainObjectSTIX
	Name        string `json:"name" bson:"name" required:"true"`
	Description string `json:"description" bson:"description"`
}
*/
